# Reset Windows Features Script\n#Requires -Version 5.0\n#Requires -RunAsAdministrator\n\nparam([switch]$Silent, [switch]$CreateBackup = $true, [switch]$Force)\n\n$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition\nImport-Module (Join-Path $scriptPath \"ReSetUtils.psm1\") -Force\n\n$operationName = \"Windows Features Reset\"\n\ntry {\n    Assert-AdminRights\n    $operation = Start-ReSetOperation -OperationName $operationName\n    \n    # Reset optional features to defaults\n    Write-ProgressStep -StepName \"Resetting optional features\" -CurrentStep 1 -TotalSteps 5\n    try {\n        # Enable common features\n        Enable-WindowsOptionalFeature -Online -FeatureName \"NetFx3\" -All -NoRestart -ErrorAction SilentlyContinue\n        Enable-WindowsOptionalFeature -Online -FeatureName \"IIS-WebServerRole\" -All -NoRestart -ErrorAction SilentlyContinue\n        Enable-WindowsOptionalFeature -Online -FeatureName \"Microsoft-Windows-Subsystem-Linux\" -All -NoRestart -ErrorAction SilentlyContinue\n    } catch {
                # Silently continue - non-critical operation
            }\n    \n    # Reset Windows capabilities\n    Write-ProgressStep -StepName \"Resetting Windows capabilities\" -CurrentStep 2 -TotalSteps 5\n    try {\n        Get-WindowsCapability -Online | Where-Object {$_.State -eq \"NotPresent\"} | Add-WindowsCapability -Online -ErrorAction SilentlyContinue\n    } catch {
                # Silently continue - non-critical operation
            }\n    \n    # Reset app packages\n    Write-ProgressStep -StepName \"Resetting app packages\" -CurrentStep 3 -TotalSteps 5\n    try {\n        Get-AppxPackage -AllUsers | Where-Object {$_.Name -like \"*Microsoft*\"} | ForEach-Object {\n            Add-AppxPackage -DisableDevelopmentMode -Register \"$($_.InstallLocation)\\AppXManifest.xml\" -ErrorAction SilentlyContinue\n        }\n    } catch {
                # Silently continue - non-critical operation
            }\n    \n    # Reset component store\n    Write-ProgressStep -StepName \"Cleaning component store\" -CurrentStep 4 -TotalSteps 5\n    try {\n        $null = & dism /online /cleanup-image /startcomponentcleanup 2>&1\n    } catch {
                # Silently continue - non-critical operation
            }\n    \n    # Reset feature registry\n    Write-ProgressStep -StepName \"Resetting feature registry\" -CurrentStep 5 -TotalSteps 5\n    $featuresPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\OptionalFeatures\"\n    # Reset feature states in registry\n    \n    Write-ReSetLog \"Windows features reset completed successfully\" \"SUCCESS\"\n    Complete-ReSetOperation -OperationInfo $operation -Success $true\n}\ncatch {\n    Complete-ReSetOperation -OperationInfo $operation -Success $false -ErrorMessage $_.Exception.Message\n    throw\n}"
