# Reset Registry Script\n#Requires -Version 5.0\n#Requires -RunAsAdministrator\n\nparam([switch]$Silent, [switch]$CreateBackup = $true, [switch]$Force)\n\n$scriptPath = Split-Path -Parent $MyInvocation.MyCommand.Definition\nImport-Module (Join-Path $scriptPath \"ReSetUtils.psm1\") -Force\n\n$operationName = \"Registry Cleanup and Reset\"\n\ntry {\n    Assert-AdminRights\n    $operation = Start-ReSetOperation -OperationName $operationName\n    \n    # Clean orphaned registry entries\n    Write-ProgressStep -StepName \"Cleaning orphaned entries\" -CurrentStep 1 -TotalSteps 6\n    $orphanedPaths = @(\n        \"HKCU:\\SOFTWARE\\Classes\\Applications\",\n        \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\"\n    )\n    foreach ($path in $orphanedPaths) {\n        if (Test-Path $path) {\n            Get-ChildItem -Path $path -ErrorAction SilentlyContinue | ForEach-Object {\n                if (-not (Test-Path $_.PSChildName)) {\n                    Remove-RegistryKey -Path $_.PSPath\n                }\n            }\n        }\n    }\n    \n    # Reset registry permissions\n    Write-ProgressStep -StepName \"Resetting registry permissions\" -CurrentStep 2 -TotalSteps 6\n    try {\n        $null = & icacls \"$env:SystemRoot\\System32\\config\\SOFTWARE\" /grant \"NT AUTHORITY\\SYSTEM:(F)\" 2>&1\n        $null = & icacls \"$env:SystemRoot\\System32\\config\\SYSTEM\" /grant \"NT AUTHORITY\\SYSTEM:(F)\" 2>&1\n    } catch {
                # Silently continue - non-critical operation
            }\n    \n    # Compact registry hives\n    Write-ProgressStep -StepName \"Compacting registry hives\" -CurrentStep 3 -TotalSteps 6\n    try {\n        $null = & reg save HKLM\\SOFTWARE \"$env:TEMP\\software.hiv\" /y 2>&1\n        $null = & reg restore HKLM\\SOFTWARE \"$env:TEMP\\software.hiv\" 2>&1\n        Remove-Item -Path \"$env:TEMP\\software.hiv\" -Force -ErrorAction SilentlyContinue\n    } catch {
                # Silently continue - non-critical operation
            }\n    \n    # Clear registry caches\n    Write-ProgressStep -StepName \"Clearing registry caches\" -CurrentStep 4 -TotalSteps 6\n    $cachePaths = @(\n        \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\Shell\\MuiCache\",\n        \"HKCU:\\SOFTWARE\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\MuiCache\"\n    )\n    foreach ($cache in $cachePaths) {\n        if (Test-Path $cache) {\n            Remove-RegistryKey -Path $cache\n        }\n    }\n    \n    # Reset registry security\n    Write-ProgressStep -StepName \"Resetting registry security\" -CurrentStep 5 -TotalSteps 6\n    $securityPaths = @(\n        \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurePipeServers\",\n        \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\"\n    )\n    foreach ($secPath in $securityPaths) {\n        if (Test-Path $secPath) {\n            # Reset security descriptors\n        }\n    }\n    \n    # Run registry integrity check\n    Write-ProgressStep -StepName \"Running integrity check\" -CurrentStep 6 -TotalSteps 6\n    try {\n        $null = & sfc /scannow 2>&1\n    } catch {
                # Silently continue - non-critical operation
            }\n    \n    Write-ReSetLog \"Registry cleanup and reset completed successfully\" \"SUCCESS\"\n    Complete-ReSetOperation -OperationInfo $operation -Success $true\n}\ncatch {\n    Complete-ReSetOperation -OperationInfo $operation -Success $false -ErrorMessage $_.Exception.Message\n    throw\n}"
